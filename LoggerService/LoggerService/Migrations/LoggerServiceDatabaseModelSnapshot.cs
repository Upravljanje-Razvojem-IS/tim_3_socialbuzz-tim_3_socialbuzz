// <auto-generated />
using System;
using LoggerService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoggerService.Migrations
{
    [DbContext(typeof(LoggerServiceDatabase))]
    partial class LoggerServiceDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoggerService.Model.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("LoggerService.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LoggerService.Model.Log", b =>
                {
                    b.HasOne("LoggerService.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.OwnsOne("LoggerService.Model.HttpRequest", "Request", b1 =>
                        {
                            b1.Property<Guid>("LogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("BodyContent")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Method")
                                .HasColumnType("int");

                            b1.Property<string>("Url")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LogId");

                            b1.ToTable("LogEntries");

                            b1.WithOwner()
                                .HasForeignKey("LogId");
                        });

                    b.OwnsOne("LoggerService.Model.HttpResponse", "Response", b1 =>
                        {
                            b1.Property<Guid>("LogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("BodyContent")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Outcome")
                                .HasColumnType("int");

                            b1.Property<int>("StatusCode")
                                .HasColumnType("int");

                            b1.HasKey("LogId");

                            b1.ToTable("LogEntries");

                            b1.WithOwner()
                                .HasForeignKey("LogId");
                        });

                    b.OwnsOne("LoggerService.Model.RequestError", "Error", b1 =>
                        {
                            b1.Property<Guid>("LogId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Message")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StackTrace")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LogId");

                            b1.ToTable("LogEntries");

                            b1.WithOwner()
                                .HasForeignKey("LogId");
                        });

                    b.Navigation("Error");

                    b.Navigation("Request");

                    b.Navigation("Response");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
