// <auto-generated />
using System;
using AddressService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AddressService.Migrations
{
    [DbContext(typeof(AddressServiceDatabase))]
    partial class AddressServiceDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AddressService.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ZipCode")
                        .IsUnique()
                        .HasFilter("[ZipCode] IS NOT NULL");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AddressService.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3dea3b9-3715-4348-bd4d-8f991375dacd"),
                            Code = "381",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = new Guid("f1068e87-1b0f-4c51-a58e-c7adddbd92b3"),
                            Code = "44",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = new Guid("3c9b3912-774c-4c24-adeb-740fe735f217"),
                            Code = "49",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("2d275174-c53b-45d6-9091-d39d3b6593a4"),
                            Code = "33",
                            Name = "Frace"
                        },
                        new
                        {
                            Id = new Guid("cbbbd1b4-8fba-46a1-b3d4-f3c957be60b2"),
                            Code = "34",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("891705dc-379a-4313-80eb-98a5d9d46dc2"),
                            Code = "39",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("6e027439-0f99-4f8c-96f2-7720695ff6fc"),
                            Code = "387",
                            Name = "Bosnia and Herzegovina"
                        });
                });

            modelBuilder.Entity("AddressService.Models.City", b =>
                {
                    b.HasOne("AddressService.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
